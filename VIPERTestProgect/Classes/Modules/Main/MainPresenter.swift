//
//  MainPresenter.swift
//  VIPERTestProgect
//
//  Created by Раис Аглиуллов on 15.08.2020.
//  Copyright (c) 2020 Ильдар Аглиуллов. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol MainPresentationLogic {
    func presentFetchedNavigationTitle(response: Main.FetchTitle.Response)
    func presentFetchedOptions(response: Main.FetchOptions.Response)
    func presentChangeControllerMode(response: Main.ChangeControllerMode.Response)
    func presentOpenDetails(response: Main.OpenDetails.Response)
    
}

class MainPresenter {
    
    weak var viewController: MainDisplayLogic?
    
    private func getSection(options: [Options]) -> [Main.DisplayedSection] {
        var sectoins: [Main.DisplayedSection] = []
        for option in options {
            let infoCell = Main.DisplayedSection.DisplayedCell(type: .info(title: option.title))
            let descriptionCell = Main.DisplayedSection.DisplayedCell(type: .description(title: option.description, imageName: option.imageName))
            
            let section = Main.DisplayedSection(type: .main, cells: [infoCell, descriptionCell], header: option.header, footer: option.footer)
            sectoins.append(section)
        }
        return sectoins
    }
    
}

extension MainPresenter: MainPresentationLogic {
    
    func presentFetchedNavigationTitle(response: Main.FetchTitle.Response) {
        let viewModel = Main.FetchTitle.ViewModel(titleOption: response.titleOption)
        viewController?.displayFetchedNavigationTitle(viewModel: viewModel)
    }
    
    func presentFetchedOptions(response: Main.FetchOptions.Response) {
        let sections = getSection(options: response.mainOption)
        
        let viewModel = Main.FetchOptions.ViewModel(displayedSection: sections)
        viewController?.displayFetchedOptions(viewModel: viewModel)
    }
    
    func presentChangeControllerMode(response: Main.ChangeControllerMode.Response) {
        let viewModel = Main.ChangeControllerMode.ViewModel(mode: response.mode)
        viewController?.displayChangeControllerMode(viewModel: viewModel)
    }
    
    func presentOpenDetails(response: Main.OpenDetails.Response) {
        let viewModel = Main.OpenDetails.ViewModel(option: response.option)
        viewController?.displayOpenDetails(viewModel: viewModel)
    }
    
}
