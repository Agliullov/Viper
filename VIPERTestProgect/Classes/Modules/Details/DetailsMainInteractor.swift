//
//  DetailsMainInteractor.swift
//  VIPERTestProgect
//
//  Created by Раис Аглиуллов on 15.08.2020.
//  Copyright (c) 2020 Ильдар Аглиуллов. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol DetailsMainBusinessLogic {
    func fetchOptions(request: DetailsMain.FetchOptions.Request)

}

protocol DetailsMainDataStore {
    var option: Options? { get set }
}

class DetailsMainInteractor: DetailsMainDataStore {
    
    var presenter: DetailsMainPresentationLogic?
    var worker: DetailsMainWorker?
    
    private var mutableOption: Options?
    
    var option: Options? {
        didSet {
            guard option != nil, mutableOption == nil else { return }
            mutableOption = option
        }
    }
    
    private var mode: ControllerMode = .viewing {
        didSet {
            let response = DetailsMain.ChangeControllerMode.Response(mode: mode)
            presenter?.presentChangeControllerMode(response: response)
        }
    }
}

extension DetailsMainInteractor: DetailsMainBusinessLogic {
    
    func fetchOptions(request: DetailsMain.FetchOptions.Request) {
        mode = .updating
        DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
            let response = DetailsMain.FetchOptions.Response(detailsOption: self.mutableOption)
            self.presenter?.presentFetchedOptions(response: response)
            self.mode = .viewing
        }
    }
    
}
